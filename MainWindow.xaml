<Window x:Class="BGEdit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:nodify="https://miroiu.github.io/nodify"
        xmlns:local="clr-namespace:BGEdit"
        mc:Ignorable="d"
        Title="BGDView v0.1.0" Height="450" Width="800">
    <!-- Set 
    
        <Window.InputBindings>
            <KeyBinding Key="R" Command="{Binding ReloadConfig}"/>
        
        </Window.InputBindings>
     -->

    <Window.Resources>
        <GeometryDrawing x:Key="SmallGridGeometry"
                        Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                        Brush="CadetBlue" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                        Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                        Brush="CadetBlue" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                    TileMode="Tile"
                    ViewportUnits="Absolute"
                    Viewport="0 0 20 20"
                    Transform="{Binding ViewportTransform, ElementName=Editor}"
                    Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                    TileMode="Tile"
                    ViewportUnits="Absolute"
                    Opacity="0.5"
                    Viewport="0 0 100 100"
                    Transform="{Binding ViewportTransform, ElementName=Editor}"
                    Drawing="{StaticResource LargeGridGeometry}" />
        <Style x:Key="DockPanel" TargetType="{x:Type DockPanel}">
            <Setter Property="DockPanel.Dock" Value="Left"/>
            <Setter Property="Height" Value="NaN"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="LastChildFill" Value="True"/>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="19*"/>
            <ColumnDefinition Width="141*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <nodify:NodifyEditor Grid.RowSpan="2"  ViewportLocation="{Binding ViewportLocation}"  ItemsSource="{Binding Nodes}"  Connections="{Binding Connections}" PendingConnection="{Binding PendingConnection}" DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}" Grid.ColumnSpan="2">
            <!-- Set context -->
            <nodify:NodifyEditor.DataContext>
                <local:EditorViewModel />
            </nodify:NodifyEditor.DataContext>

            <!-- Connection-Templates for the edítor -->
            <nodify:NodifyEditor.ConnectionTemplate>
                <DataTemplate DataType="{x:Type local:ConnectionViewModel}">
                    <nodify:LineConnection Source="{Binding Source.Anchor}" Target="{Binding Target.Anchor}"  Stroke ="{Binding Stroke}"/>

                </DataTemplate>
            </nodify:NodifyEditor.ConnectionTemplate>

            <!-- Handle pending connection -->
            <nodify:NodifyEditor.PendingConnectionTemplate>
                <DataTemplate DataType="{x:Type local:PendingConnectionViewModel}">
                    <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                      CompletedCommand="{Binding FinishCommand}"
                                      AllowOnlyConnectors="True" />
                </DataTemplate>
            </nodify:NodifyEditor.PendingConnectionTemplate>

            <!-- Style for node -->
            <nodify:NodifyEditor.ItemContainerStyle>
                <Style TargetType="{x:Type nodify:ItemContainer}">
                    <Setter Property="Location" 
                    Value="{Binding Location}"/>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>

                    </Style.Triggers>
                </Style>
            </nodify:NodifyEditor.ItemContainerStyle>

            <!-- Node-Templates for the edítor -->
            <nodify:NodifyEditor.ItemTemplate>

                <DataTemplate DataType="{x:Type local:NodeViewModel}" >
                    <!-- NodeViewModel is the reference name of the node-->
                    <nodify:Node Input="{Binding Input}" Output="{Binding Output}" HeaderBrush="{Binding HeaderBrushColor}">
                        <nodify:Node.Header>
                            <StackPanel Orientation="Vertical" >
                                <StackPanel Width="Auto">
                                    <TextBox Text="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Background="{Binding HeaderBrushColor}" TextAlignment="Center"></TextBox>

                                    <TextBox Text="{Binding Title}" Background="{Binding HeaderBrushColor}" TextAlignment="Center"></TextBox>
                                    <TextBox Text="{Binding UUID}" Background="{Binding HeaderBrushColor}" IsReadOnly="True" TextAlignment="Center"></TextBox>

                                </StackPanel>
                                <Button Command="{Binding AddChildren}" IsEnabled="{Binding AddChildVisible}" Visibility="{Binding AddChildVisible}">Add child</Button>
                                <Button Command="{Binding RemoveNode}" IsEnabled="{Binding RemoveVisible}" Visibility="{Binding RemoveVisible}">Remove node</Button>
                            </StackPanel>
                        </nodify:Node.Header>
                        <nodify:Node.InputConnectorTemplate>

                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <nodify:NodeInput Header="{Binding Title}" IsConnected="{Binding IsConnected}" Anchor="{Binding Anchor, Mode=OneWayToSource}"/>
                            </DataTemplate>

                        </nodify:Node.InputConnectorTemplate>

                        <nodify:Node.OutputConnectorTemplate>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <nodify:NodeOutput Header="{Binding Title}" IsConnected="{Binding IsConnected}" Anchor="{Binding Anchor, Mode=OneWayToSource}"/>
                            </DataTemplate>
                        </nodify:Node.OutputConnectorTemplate>

                        <StackPanel>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding RootsFound}">
                                <ItemsControl ItemsSource="{Binding RootList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding GroupsFound}">
                                <ItemsControl ItemsSource="{Binding GroupList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding TagsFound}">
                                <ItemsControl ItemsSource="{Binding TagList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding TagsToSetFound}">
                                <ItemsControl ItemsSource="{Binding TagSetList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding SpeakersFound}">
                                <ItemsControl ItemsSource="{Binding SpeakerList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <Border Background="Transparent" BorderBrush="White" BorderThickness="1" Visibility="{Binding TagTextFound}">

                                <ItemsControl ItemsSource="{Binding TagTextList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>


                                        </ItemsPanelTemplate>

                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                            <!-- Removed att loc.-->

                        </StackPanel>
                    </nodify:Node>
                </DataTemplate>


            </nodify:NodifyEditor.ItemTemplate>
        </nodify:NodifyEditor>
        <Expander Grid.Row="1"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Left"
              Background="LightSlateGray"
              BorderBrush="Black"
              IsExpanded="True"
              ExpandDirection="Left"
              Padding="3 1 1 3" Grid.ColumnSpan="2">

            <DockPanel DataContext="{Binding Source={x:Static local:EditorViewModel.instance}}">


                <StackPanel  DockPanel.Dock="Top">
                    <Border Background="SlateGray" BorderBrush="Black">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel>
                                <Button x:Name="SaveButton" DataContext="{Binding Source={x:Static local:BGData.Instance}}" Command="{Binding Save}" Content="Save" VerticalAlignment="Bottom" Width="112" Height="20"/>
                                <Button x:Name="CopyToClipButton" DataContext="{Binding Source={x:Static local:BGData.Instance}}" Command="{Binding CopyToClip}" Content="Copy to Clipboard" Width="112" Height="20"/>
                            </StackPanel>
                            <StackPanel>
                                <Button Content="Selected node" Command="{Binding JumpToNode}"></Button>
                                <Button Content="Show jump" Command="{Binding ToggleJump}"></Button>
                            </StackPanel>
                        </StackPanel>

                    </Border>
                    <Expander Header="Node Properties">
                        <StackPanel>
                            <CheckBox BorderBrush="Black" Background="LightGray" IsChecked="{Binding CurrentNodeViewModel.RootCheckbox}">RootNode</CheckBox>
                            <CheckBox BorderBrush="Black" Background="LightGray" IsChecked="{Binding CurrentNodeViewModel.EndCheckbox}">EndNode</CheckBox>
                            <CheckBox BorderBrush="Black" Background="LightGray" IsChecked="{Binding CurrentNodeViewModel.OptionalCheckbox}">optional</CheckBox>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"  SharedSizeGroup="SharedColumn"/>
                                    <ColumnDefinition Width="*"  SharedSizeGroup="SharedColumn"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" SharedSizeGroup="SharedColumn"></RowDefinition>
                                </Grid.RowDefinitions>
                                <!-- Left row-->
                                <StackPanel Grid.Column="0">
                                    <TextBlock Height="23" Background="Beige">GroupID</TextBlock>
                                    <TextBlock Height="23"  Background="Beige">GroupIndex</TextBlock>
                                    <TextBlock Height="23"  Background="Beige">UUID</TextBlock>
                                    <TextBlock Height="23"  Background="Beige">constructor</TextBlock>
                                    <TextBlock Height="23"  Background="Beige">speaker</TextBlock>
                                    <TextBlock Height="23"  Background="Beige">PopLevel</TextBlock>

                                </StackPanel>
                                <!-- right row-->
                                <StackPanel Grid.Column="1">
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.GroupID}"></TextBox>
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.GroupIndex}"></TextBox>
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.UUID}" IsEnabled="True"></TextBox>
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.Constructor}"></TextBox>
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.Speaker}"></TextBox>
                                    <TextBox Height="23"  Background="Beige" BorderBrush="Gray" Text="{Binding CurrentNodeViewModel.PopLevel}"></TextBox>
                                </StackPanel>
                            </Grid>
                            <!-- Tags-->
                            <StackPanel Grid.Column="0">
                                <TextBlock TextAlignment="Center">TaggedText</TextBlock>
                                <Separator Height="2" Margin="0,10" Background="Black"/>
                            </StackPanel>

                            <StackPanel Grid.Column="0">
                                <ItemsControl Grid.Column="0" ItemsSource="{Binding CurrentNodeViewModel.TaggedTextDataEditable}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <!-- The default for an ItemsControl is a StackPanel with a vertical orientation -->
                                            <StackPanel/>

                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <!-- <Button Command="{Binding AddEditorData}">Add editordata</Button>-->
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Node Transition" DockPanel.Dock="Top">

                    </Expander>
                    <Expander Header="Node Flags" DockPanel.Dock="Top">
                        <StackPanel>
                            <!-- checkFlags-->
                            <TextBlock>Check Flags</TextBlock>
                            <StackPanel>
                                <ItemsControl ItemsSource="{Binding CurrentNodeViewModel.CheckFlagEditable}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <!-- The default for an ItemsControl is a StackPanel with a vertical orientation -->
                                            <StackPanel/>

                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <Button Command="{Binding CurrentNodeViewModel.AddCheckFlag}">Add Tag</Button>
                            </StackPanel>
                            <Separator Height="2" Margin="0,10" Background="Black"/>
                            <!-- setFlags-->
                            <TextBlock>Set Flags</TextBlock>
                            <StackPanel>
                                <ItemsControl ItemsSource="{Binding CurrentNodeViewModel.SetFlagEditable}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <Button Command="{Binding CurrentNodeViewModel.AddSetFlag}">Add Tag</Button>
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Misc">

                    </Expander>
                    <Expander Header="EditorData">

                        <StackPanel>
                            <ItemsControl ItemsSource="{Binding CurrentNodeViewModel.EditorDataEditable}" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <Button Command="{Binding CurrentNodeViewModel.AddEditorData}">Add editordata</Button>
                        </StackPanel>

                    </Expander>
                </StackPanel>

            </DockPanel>

        </Expander>
    </Grid>


</Window>
